#----------OPENING FILES-------

# NOTE if you only open the file (f = open(file.txt, 'r'), you have to remember to explicitly close it
# json.load method opens file into a python object
# json.loads method opens file as a string

with open('file.txt, 'r') as f:
  f_contents = f.read()
  print(f_contents) #NOTE prints all content of the file, which has risk of running out of memory
  
 f_contents = f.readlines()
  print(f_contents() #NOTE reads every line of the file as a dif element 
  
   f_contents = f.readline()
  print(f_contents() #NOTE prints FIRST line of the file as a dif element, then the second + each time you run it 
  
with open('file.txt, 'r') as f:
  for line in f:
    print(line, end='') #NOTE doesn't read all of the contents at once. It gets on line at a time
    
  with open('file.txt, 'r') as f:
  f_contents = f.read(100) #NOTE prints the first 100 characters of the file
  print(f_contents, end='') #NOTE each time you run, it picks up where it left off until the end of the file
  
  with open('file.txt, 'r') as f:
    size_to_read = 100
    f_contents = f.read(size_to_read)
   
   while len(f_contents) > 0: #NOTE check the length of the file
      print(f_contents, en='') #NOTE print the first 100 characters (defined in size_to_read)
      f_contents = f.read(size_to_read)  #NOTE update the length of the file
      
      print(f.tell() #<-- NOTE this just tells you what character you're at
      f.seek(0) #<-- NOTE this sets the position you wwant to begin with

with open('states.json', 'r') as f: #open file with information about US states
  data = json.load(f)
 
 for states in data('states'['name']: #print out the object called 'state' from the json file named states
    print(state['name', state['abbreviation'], state['area_code'])

#To delete something from the dictionary

 for states in data('states'['name']: #print out the object called 'state' from the json file named states
    del state['area_code']
    
#----------WRITING TO FILES-------

with open('test2.txt', 'w') as f: #NOTE if there's no tile, a new one will be created. if thereis, it will be overwritten
  f.write('test')
  f.write('test') #NOTE writes test a second time (testtest)
  
  f.seek(0)
  f.write('test') #NOTE will only overwrite what it needs to. So in this case it would override the first 4 characters

#------- CONVERT TO JSON FILE------
